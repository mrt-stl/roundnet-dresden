6 ESLint rules behave differently from their TSLint counterparts:
  * no-invalid-this:
    - Functions in methods will no longer be ignored.
  * @typescript-eslint/no-unused-expressions:
    - The TSLint optional config "allow-new" is the default ESLint behavior and will no longer be ignored.
  * prefer-arrow/prefer-arrow-functions:
    - ESLint does not support allowing standalone function declarations.
    - ESLint does not support allowing named functions defined with the function keyword.
  * eqeqeq:
    - Option "smart" allows for comparing two literal values, evaluating the value of typeof and null comparisons.
  * no-underscore-dangle:
    - Leading and trailing underscores (_) on identifiers will now be ignored.
  * react/jsx-no-bind:
    - ESLint rule 'jsx-no-bind' also checks for arrow functions

Error: multiple output react/jsx-no-bind ESLint rule options were generated, but tslint-to-eslint-config doesn't have "merger" logic to deal with this.
Please file an issue at https://github.com/typescript-eslint/tslint-to-eslint-config/issues/new?template=missing_merger.md. Thanks!

16 rules are not known by tslint-to-eslint-config to have ESLint equivalents:
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "jsx-no-string-ref".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-detect-buffer-noassert".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-detect-child-process".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-detect-eval-with-expression".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-detect-html-injection".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-detect-no-csrf-before-method-override".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-detect-non-literal-buffer".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-detect-non-literal-regexp".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-detect-non-literal-require".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-detect-possible-timing-attacks".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-detect-pseudo-random-bytes".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-detect-sql-literal-injection".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-detect-unsafe-cross-origin-communication".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-detect-unsafe-properties-access".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-detect-unsafe-regexp".
  * tslint-to-eslint-config does not know the ESLint equivalent for TSLint's "tsr-disable-mustache-escape".

